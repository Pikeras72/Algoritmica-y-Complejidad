public class main {
    public static void main(String[] args) {
        System.out.println(coincideIndice(new int[]{1 ,-850, -95 ,-9 ,4 ,99941}));
    }
    public static int recursividad (int[] vector, int i0, int iN){
        if(i0 == iN){
            return 1;       //devuelvo 1 que es lo que ocupa un nÃºmero en el vector.
        }
        int k = (i0 + iN)/2;
        int m1 = recursividad(vector, i0,k);
        int m2 = recursividad(vector, k+1, iN);
        int m3 = recursividad2(vector, i0, k, iN);
        return Math.max(m1,Math.max(m2,m3));
    }

    public static int recursividad2(int[] vector, int i0, int k, int iN){
        int i=k;
        while (i>i0 && vector[i-1]<=vector[i]) {
              i--;
        }
        int j=k;
        while (j<iN && vector[j+1]>=vector[j]) {
            j++;
        }
        return j-i+1;
    }
    
    public static int coincideIndice(int[] vector){
        return recursividad(vector,0,vector.length-1);
    }
}

//COMPLEJIDAD:   2*T(N/2) + O(N)  =  N*Log(N)
